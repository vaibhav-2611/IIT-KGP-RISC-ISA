===============================================================================================================
R-type instructions:        
===============================================================================================================
add   rs, rt 		000000 | --rs- | --rt- | xxxxx | xxxxx | 000001 		ADD		             
comp  rs, rt 		000000 | --rs- | --rt- | xxxxx | xxxxx | 000010 		2's COMP
and   rs, rt		000000 | --rs- | --rt- | xxxxx | xxxxx | 000011 		AND 
xor   rs, rt 		000000 | --rs- | --rt- | xxxxx | xxxxx | 000100 		XOR 
shllv rs, rt 		000000 | --rs- | --rt- | xxxxx | xxxxx | 000101 		Shift L 
shrlv rs, rt 		000000 | --rs- | --rt- | xxxxx | xxxxx | 000110 		Shift R	
shrav rs, rt 		000000 | --rs- | --rt- | xxxxx | xxxxx | 000111 		Shift R with proper sign 
****************************************************************************************************************


===============================================================================================================
Load Store instructions:
===============================================================================================================
lw   rt, imm(rs)	000001 | --rs- | --rt- | ------imm------------ 			ADD
sw   rt, imm(rs)	000010 | --rs- | --rt- | ------imm------------			ADD
****************************************************************************************************************


===============================================================================================================
Immidiate instructions:
===============================================================================================================
addi  rs, imm		100001 | --rs- | ---------------imm----------- 			ADD			
compi rs, imm 		100010 | --rs- | ---------------imm----------- 			2's COMP		
shll  rs, sh 		100011 | --rs- | --------------sh------------- 			Shift L			
shrl  rs, sh 		100100 | --rs- | --------------sh------------- 			Shift R 		
shra  rs, sh 		100101 | --rs- | --------------sh------------- 			Shift R with proper sign
****************************************************************************************************************

===============================================================================================================
Branch instructions:
===============================================================================================================
bz    L  			110001 | -----------------------L-------------			
bnz   L 			110010 | -----------------------L-------------

bcy   L 			110011 | -----------------------L-------------
bncy  L 			110100 | -----------------------L-------------

bs 	  L 			110101 | -----------------------L-------------
bns   L 			110110 | -----------------------L-------------

bv    L 			110111 | -----------------------L-------------
bnv   L 			111000 | -----------------------L-------------

b     L 			111001 | -----------------------L-------------
br 	  rs 			111010 | --rs- | xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Call  L 			111101 | -----------------------L-------------
Ret	    			111100 | xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
****************************************************************************************************************


===============================================================================================================
unsigned:
	carry flag = 1 => result is worng.
	overflow flag => we dont care.
-------------------------------------------------------
2's comp signed:
	carry flag => we dont care.
	overflow flag=1 => result is worng.
-------------------------------------------------------
The overflow flag is for signed numbers, not unsigned.
-------------------------------------------------------
Carry flag:
	1 when ADDITION 	of 2 nos give COUT as 1
	1 when SUBTRACTION 	of 2 nos give COUT as 1
	otherwise 
	0
-------------------------------------------------------
Overflow flag:
	Ov = Cout XOR Cout-1
****************************************************************************************************************
